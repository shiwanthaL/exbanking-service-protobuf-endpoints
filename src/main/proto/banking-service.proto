syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.yolo.practical.bankingservice.proto";

import "google/protobuf/empty.proto";

//======================= proto - bank req, res payloads =================================
// Defines the request payload. Here each attribute that goes into the message is defined
//========================================================================================

// ==== CREATE PROTOBUF =======
message CreateUserRequest{
  string fullName = 1;
  string email = 2;
  string passport = 3;
}

message CreateUserResponse{
  string fullName = 1;
  string accountNo = 2;
  string ibanNo = 3;
  string swiftCode = 4;
  string bankName = 5;
  string branchName = 6;
  int64 balance = 7;
  string email = 8;
  string passport = 9;
}

// ==== BALANCE PROTOBUF ======
message GetBalanceRequest{
  string fullName = 1;
}

message GetBalanceResponse{
  string fullName = 1;
  string accountNo = 2;
  int64 balance = 3;
}

// ==== DEPOSIT PROTOBUF ======
message DepositRequest{
  string fullName = 1;
  int64 amount = 2;
}

message DepositResponse{
  string fullName = 1;
  int64 prior_amount = 2;
  int64 current_balance = 3;
}

// ==== WITHDRAW PROTOBUF ======
message WithdrawRequest{
  string fullName = 1;
  int64 amount = 2;
}

message WithdrawResponse{
  string fullName = 1;
  int64 prior_amount = 2;
  int64 current_balance = 3;
}

// ==== SEND PROTOBUF ==========
message SendRequest{
  string fullName = 1;
  string sender_account = 2;
  int64 amount = 3;
  string remark = 4;
}

message SendResponse{
  string from_account = 1;
  string beneficiary_account = 2;
  string transaction_remark = 3;
  string reference_no = 4;
  int64 transfer_amount = 5;
  int64 current_balance = 6;
}

//======================= proto - utility payloads (data cleanup) ========================
// Defines the data clean up request payload. for test automation purpose
//========================================================================================

message GetUsersResponse{
  repeated CreateUserResponse users = 1;
}

message CloseAccountRequest{
  string fullName = 1;
}

//========================= proto - bank services =======================================
// Define the service contract. For our BankingService all end-point methods defined here
// create_user : create new bank account for specific customer
// get_balance : display user available saving amount
// deposit : adding amount top of the current balance as a savings
// withdraw : deduct amount from current balance as a withdrawal
// get_users : display all created user accounts details
// close_account : close customer saving account
//=======================================================================================

service BankingService{
  rpc create_user(CreateUserRequest) returns (CreateUserResponse) {};
  rpc get_balance(GetBalanceRequest) returns (GetBalanceResponse) {};
  rpc deposit(DepositRequest) returns (DepositResponse) {};
  rpc withdraw(WithdrawRequest) returns (WithdrawResponse) {};
  rpc send(SendRequest) returns (SendResponse) {};
  rpc get_users(google.protobuf.Empty) returns (GetUsersResponse) {};
  rpc close_account(CloseAccountRequest) returns (google.protobuf.Empty) {}
}